@model PantryDjango.Models.FoodItem
@using static PantryDjango.Models.FoodItem
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Add New Item";
}

<h2 style="font-family: 'Single Day', cursive;">What did you get?</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Barcode input and scan -->
            <div class="input-group mb-3">
                <span class="input-group-text" id="barcodeLabel">Barcode</span>
                <input type="text" id="barcodeInput" name="Barcode" class="form-control" aria-describedby="barcodeLabel" placeholder="Scan barcode or enter manually" />
            </div>

            <div class="mb-3">
                <button type="button" class="btn btn-outline-secondary" onclick="startScanner()">Start Scanner</button>
            </div>

            <!-- Camera view -->
            <div id="reader" style="width: 300px; margin-bottom: 20px;"></div>

            <div class="input-group mb-3">
                <span class="input-group-text" id="nameLabel">Name</span>
                <input asp-for="Name" class="form-control" aria-describedby="nameLabel" />
            </div>
            <span asp-validation-for="Name" class="text-danger"></span> @*빈칸으로 두면 주의주는 기능*@

            <div class="input-group mb-3">
                <span class="input-group-text" id="nameLabel">Description</span>
                <input asp-for="Description" class="form-control" aria-describedby="nameLabel" />
            </div>
            <span asp-validation-for="Description" class="text-danger"></span>


            <div class="input-group mb-3">
                <span class="input-group-text" id="nameLabel">Expiration Date</span>
                <input asp-for="ExpirationDate" class="form-control" type="date" aria-describedby="nameLabel" />
            </div>
            <span asp-validation-for="ExpirationDate" class="text-danger"></span>


            <div class="input-group mb-3">
                <span class="input-group-text" id="nameLabel">Quantity</span>
                <input asp-for="Quantity" class="form-control" aria-describedby="nameLabel" />
            </div>
            <span asp-validation-for="Quantity" class="text-danger"></span>

            <div class="input-group mb-3">
                <span class="input-group-text" id="nameLabel">Unit</span>
                <input asp-for="Unit" class="form-control" aria-describedby="nameLabel" />
            </div>
            <span asp-validation-for="Unit" class="text-danger"></span>

            <div class="input-group mb-3">
                <span class="input-group-text" id="categoryLabel">Category</span>
                <select asp-for="Category"
                        asp-items="Html.GetEnumSelectList<FoodCategory>()"
                        class="form-control"
                        aria-describedby="categoryLabel">
                    <option value="">-- Select Category --</option>
                </select>
            </div>
            <span asp-validation-for="Category" class="text-danger"></span>

            <div class="input-group mb-3">
                <span class="input-group-text" id="locationLabel">Location</span>
                <select asp-for="Location"
                        asp-items="Html.GetEnumSelectList<StorageLocation>()"
                        class="form-control"
                        aria-describedby="locationLabel">
                    <option value="">-- Select Location --</option>
                </select>
            </div>
            <span asp-validation-for="Location" class="text-danger"></span>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary ms-2">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <!-- Html5Qrcode CDN -->
    <script src="https://unpkg.com/html5-qrcode"></script>

    <!-- Scanner Funtion -->
    <script>
        let html5QrCode;

        window.addEventListener('DOMContentLoaded', () => {
            function startScanner() {
                if (html5QrCode) {
                    html5QrCode.stop().then(() => html5QrCode.clear());
                }

                html5QrCode = new Html5Qrcode("reader");
                html5QrCode.start(
                    { facingMode: "environment" },
                    { fps: 10, qrbox: 250 },
                    decodedText => {
                        const input = document.getElementById("barcodeInput");
                        if (input) {
                            input.value = decodedText;
                            console.log("Scanned and set:", decodedText);
                        } else {
                            console.warn("❌ barcodeInput field not found.");
                        }
                        html5QrCode.stop();
                    },
                    error => {}
                ).catch(err => console.error("Camera error:", err));
            }

            // 바깥에서도 사용 가능하게 글로벌 함수로 할당
            window.startScanner = startScanner;
        });
    </script>
}
