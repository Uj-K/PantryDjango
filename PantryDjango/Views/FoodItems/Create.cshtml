@*This page is for creating a food item*@

@model PantryDjango.Models.FoodItem
@using static PantryDjango.Models.FoodItem
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Add New Item";
}

<h2 style="font-family: 'Single Day', cursive;">What did you get?</h2>

<hr />
<div class="row">
    <div class="col-md-8 col-lg-6">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <!-- Barcode Scan -->
            <div class="mb-3 d-flex flex-column align-items-start">
                <button type="button" id="startScan" class="btn btn-outline-secondary mb-2 w-100">📷 Scan Barcode</button>
                <video id="video-preview" class="w-100 border" style="max-height: 120px;"></video>
            </div>

            <div class="mb-3">
                <label asp-for="Barcode" class="form-label">Barcode</label>
                <input asp-for="Barcode" class="form-control" />
                <span asp-validation-for="Barcode" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Name" class="form-label">Name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>


            <div class="mb-3">
                <label asp-for="Description" class="form-label">Description</label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <!-- OCR Camera View (바코드 스타일 재사용) -->
            <div class="mb-3 d-flex flex-column align-items-start">
                <button type="button" id="startOcr" class="btn btn-outline-secondary mb-2 w-100">📷 Scan Expiration Date</button>
                <video id="ocr-video" class="w-100 border" style="max-height: 120px;"></video>
                <canvas id="ocr-canvas" style="display:none;"></canvas>
            </div>

            <div class="mb-3">
                <label asp-for="ExpirationDate" class="form-label">Expiration Date</label>
                <input asp-for="ExpirationDate" type="date" class="form-control" />
                <span asp-validation-for="ExpirationDate" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Quantity" class="form-label">Quantity</label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label for="Categories" class="form-label">Categories</label>
                <input id="Categories" class="form-control" />
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Location" class="form-label">Location</label>
                <select asp-for="Location"
                        asp-items="Html.GetEnumSelectList<StorageLocation>()"
                        class="form-select">
                    <option value="">-- Select Location --</option>
                </select>
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>

            <div class="d-flex gap-2">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const expirationInput = document.getElementById('ExpirationDate');

            if (!expirationInput) {
                console.error("ExpirationDate input을 찾을 수 없습니다.");
                return;
            }

            // (1) 사용자가 날짜를 선택하거나 바꿨을 때, 과거면 alert
            expirationInput.addEventListener('change', function () {
                const expValue = expirationInput.value;
                if (expValue) {
                    const selectedDate = new Date(expValue);
                    const today = new Date();
                    today.setHours(0, 0, 0, 0);
                    selectedDate.setHours(0, 0, 0, 0);

                    if (selectedDate < today) {
                        alert('This date is past, are you sure?');
                    }
                }
            });
        });
    </script>
}

<script type="module" src="~/js/barcode-scan.js"></script>
<script type="module" src="~/js/ocr.js"></script>



